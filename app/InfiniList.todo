[ Features
  v[ Add item ]
  v[ Scroll long lists ]
  v[ Complete saving and loading
    v[ Save list to disk
      v[ written routines ]
      v[ Test routines
        v[ Currently write output is empty
          [ Look for an example of OutputFileStream, etc. ]
        ]
      ]
    ]
    v[ Load list from disk ]
    v[ Save to "disk"
      ?[ When?
        v[ When list modified ]
      ]
    ]
  ]
  [ Item context menu
    [ Delete Item ]
  ]
  [ Ordering
    [ Add manual order grab-icon ]
    [ Allow manual ordering ]
    [ Add toolbar menu ordering ]
  ]
  [ Subitems
    [ add (via item context menu) ]
    [ "Back" goes up one level. ]
    [ Indicate sub-list ]
    [ Open sub-list ]
  ]
  [ Status indicator
    [ Show ]
    [ Toggle ]
  ]
  [ Expand description on single click
    [ Modify the TextView's maxlines attribute ]
  ]
  [ On force close save state in onSaveInstanceState
    [ Must save
      [ current list
        v[ ListItem::writeAddress ]
      ]
      v[ current scroll position
        x[ The default version does this for us. Call
          super.onSaveInstanceState for this. ]
      ]
    ]
    [ onStart or onRestoreInstanceState must act on this
      v[ Call super.onRestoreInstanceState to restore scroll pos ]
      [ load address ]
      v[ got to address ]
    ]
  ]
  [ ToolBar menu
    [ Add search ]
  ]
  [ Exporting
    [ TODO ]
    [ json ]
  ]
  [ Widget
    [ Allow selecting list-root ]
  ]
  [ SSH'ing sublists
    ?[ How to indicate in exported/saved files? ]
    ?[ How to access ssh/git? ]
    ?[ schedule? ]
  ]
]

[ Interaction
  v[ Add new item - toolbar button ]
  [ Context menu - press and hold ]
  [ Delete item - context menu item ]
  [ Set flag = togglable graphic in row ]
  [ Move - drag grabable area in row (shared with flag status?) ]
  [ Open/Close sub list
    [ Swipe left to open sublist ]
    [ Swipe right to open parent list ]
    [ Show an icon on an item with child-items ]
  ]
  [ Display full description - single tap
    [ Can also be used to "tag" multiple items ]
  ]
]

[ Sources
    [ Recycler View example
      https://www.androidhive.info/2016/01/android-working-with-recycler-view/
    ]
]
